<?xml version="1.0" encoding="UTF-8" ?>  
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd"> 
<mapper namespace="com.daikuan.dao.UserDao">    
	
	<select id="getUserByUserName" parameterType="java.lang.String" resultType="com.daikuan.model.User">
		select * from dk_user t where t.userName = #{userName};
	</select>
	<select id="getUserByUserEmail" parameterType="java.lang.String" resultType="com.daikuan.model.User">
		select * from dk_user t where t.userEmail = #{userEmail};
	</select>
	
	<select id="findbyvalues" parameterType="map" resultType="com.daikuan.model.User">
		select * from dk_user t where 1=1  
		<if test="userName!=''">
			and t.userName like CONCAT('%',#{userName},'%') 
		</if>
		<if test="userEmail!=''">
			and t.userEmail like CONCAT('%',#{userEmail},'%') 
		</if>
		 order by t.createTime DESC LIMIT ${startNumber} , #{rowNumber};
	</select>
	
	<select id="findbyvaluesCount" parameterType="map" resultType="int">
		select count(*) from dk_user t where 1=1  
		<if test="userName!=''">
			and t.userName like CONCAT('%',#{userName},'%') 
		</if>
		<if test="userEmail!=''">
			and t.userEmail like CONCAT('%',#{userEmail},'%') 
		</if>
		 order by t.createTime DESC;
	</select>
	
	
	
	<select id="findAll" resultType="int">        
		select count(*)  from dk_user;
	</select>
	
	<select id = "findUsers"  parameterType="map" resultType="com.daikuan.model.User">
		select * from dk_user t order by t.createTime DESC LIMIT ${startNumber} , #{rowNumber};
	</select>
	
    <select id="getUser" parameterType="java.lang.String" resultType="com.daikuan.model.User">
    	select * from dk_user t where t.userID = #{userID};
    </select>
    
	<insert id="createUser" parameterType="com.daikuan.model.User" >
		insert into dk_user(userID,userName,userPassword,userType,userStatus,createTime,userEmail,userTel,lastLoginTime,loginCount) 
			values (#{userID},#{userName},#{userPassword},#{userType},#{userStatus},#{createTime},#{userEmail},#{userTel},#{lastLoginTime},#{loginCount})
	</insert>
	
	<update id="updateUser" parameterType="com.daikuan.model.User">
		update dk_user set userName = #{userName} , userPassword = #{userPassword} , userType=#{userType} , userStatus=#{userStatus} , createTime=#{createTime}
			 where userID = #{userID}
	</update>
	
	<update id="updateUserLoginCount" parameterType="com.daikuan.model.User">
		update dk_user set loginCount=#{loginCount}	 where userID = #{userID}
	</update>
	
	
	<delete id="deleteUser" parameterType="java.lang.String" >
		delete from dk_user t where t.userID = #{userID}
	</delete>
	
	<!-- 
	 -->
</mapper>